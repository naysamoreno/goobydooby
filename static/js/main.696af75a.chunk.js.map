{"version":3,"sources":["pictures/hand.jpg","Music/Flow.mp3","Util.js","buttons/AudioPlayer.js","3D shit/Visualizer.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RETRO_COLORS","getRandomValueFromArray","list","Math","floor","random","length","getRandomRetroColor","AudioPlayer","props","getFrequencyData","audioAnalyser","addEventListeners","button","addEventListener","handleClick","listener","AudioListener","audio","Audio","camera","add","AudioLoader","load","song","buffer","setBuffer","play","this","onAudioPlay","bind","AudioAnalyser","frequencyCount","document","createElement","innerHTML","style","Visualizer","update","requestAnimationFrame","mesh","rotation","x","amplitude","audioPlayer","console","log","scale","set","wesh","renderer","render","scene","setUpAudio","mount","appendChild","removeChild","H","window","innerHeight","W","innerWidth","THREE","background","aspectRatio","position","y","z","lookAt","light","generateMatrix","setSize","setPixelRatio","devicePixelRatio","shadowMap","enabled","domElement","geometry","material","color","sphereGeometry","sphereMaterial","shading","ref","React","Component","renderbody","element","navBody","getElementById","animation","TimelineLite","onComplete","pause","progress","Animation","to","opacity","ReactDom","ease","home","className","casa","src","hand","width","height","alt","page3","title","frameborder","allow","allowfullscreen","allowtransparency","page4","FlowSong","page5","Navbar","body","Navbutton","onClick","children","App","id","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,oPCArCC,EAAe,CAAC,mBAAmB,mBAAmB,iBAAiB,mBAAmB,oBAEzF,SAASC,EAAwBC,GAGpC,OAAOA,EAFOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,SAK3C,SAASC,IACZ,OAAON,EAAwBD,G,ICkCpBQ,EAvCX,WAAYC,GAAQ,IAAD,gCAenBC,iBAAmB,WACf,OAAO,EAAKC,cAAcD,oBAhBX,KAmBnBE,kBAAoB,WAChB,EAAKC,OAAOC,iBAAiB,QAAS,EAAKC,cApB5B,KAwBnBA,YAAc,WACV,IAAMC,EAAW,IAAIC,IACfC,EAAQ,IAAIC,IAAMH,GACxB,EAAKP,MAAMW,OAAOC,IAAIL,IACP,IAAIM,KACZC,KAAK,EAAKd,MAAMe,KAAM,SAASC,GAClCP,EAAMQ,UAAUD,GAChBP,EAAMS,OACNC,KAAKnB,MAAMoB,eACbC,KAAK,IACP,EAAKnB,cAAgB,IAAIoB,IAAcb,EAAO,EAAKT,MAAMuB,gBAAkB,OAjC3EJ,KAAKnB,MAAQA,EAEbmB,KAAKf,OAASoB,SAASC,cAAc,UACrCN,KAAKf,OAAOsB,UAAa,OACzBP,KAAKf,OAAOuB,MAAZ,yIAOAR,KAAKhB,qBCyEEyB,E,4MAtCXC,OAAS,WACLC,sBAAsB,EAAKD,QAG3B,EAAKE,KAAKC,SAASC,GAAK,IAExB,IACMC,EADgB,EAAKC,YAAYlC,mBACN,GAAK,GAAM,EAC5CmC,QAAQC,IAAIH,GACZ,EAAKH,KAAKO,MAAMC,IAAIL,EAAWA,EAAWA,GAC1C,EAAKM,KAAKF,MAAMC,IAAIL,EAAWA,EAAWA,GAE1C,EAAKO,SAASC,OAAO,EAAKC,MAAO,EAAKhC,S,EAG1CiC,WAAa,WACT,EAAKT,YAAc,IAAIpC,EAAY,CAC/BY,OAAQ,EAAKA,OACbI,KAAM,EAAKf,MAAMe,KACjBK,YAAa,EAAKA,YAClBG,eAAgB,MAEpB,EAAKsB,MAAMC,YAAY,EAAKX,YAAY/B,S,EAG5CgB,YAAc,WACV,EAAKyB,MAAME,YAAY,EAAKZ,YAAY/B,QACxC,EAAKyB,U,kEAvELV,KAAK6B,EAAIC,OAAOC,YAChB/B,KAAKgC,EAAIF,OAAOG,WAEhBjC,KAAKwB,MAAQ,IAAIU,IACjBlC,KAAKwB,MAAMW,WAAa,IAAID,IAAY,WAExC,IACME,EAAcpC,KAAKgC,EAAEhC,KAAK6B,EAGhC7B,KAAKR,OAAS,IAAI0C,IAJE,GAImCE,EAFrC,GACA,KAElBpC,KAAKR,OAAO6C,SAASvB,EAAI,EACzBd,KAAKR,OAAO6C,SAASC,EAAI,EACzBtC,KAAKR,OAAO6C,SAASE,EAAI,GACzBvC,KAAKR,OAAOgD,OAAOxC,KAAKwB,MAAMa,UAE9B,IAAMI,EAAQ,IAAIP,IAAmB,SACrClC,KAAKwB,MAAM/B,IAAIgD,GAEfzC,KAAK0C,iBACL1C,KAAKyB,aACLzB,KAAKsB,SAAW,IAAIY,IACpBlC,KAAKsB,SAASqB,QAAQ3C,KAAKgC,EAAGhC,KAAK6B,GACnC7B,KAAKsB,SAASsB,cAAcd,OAAOe,kBACnC7C,KAAKsB,SAASwB,UAAUC,SAAU,EAClC/C,KAAK0B,MAAMC,YAAY3B,KAAKsB,SAAS0B,YACrChD,KAAKsB,SAASC,OAAOvB,KAAKwB,MAAOxB,KAAKR,U,uCAKtC,IAAMyD,EAAW,IAAIf,IAAkB,EAAE,EAAE,GACrCgB,EAAW,IAAIhB,IAAwB,CAACiB,MAAOxE,MACrDqB,KAAKY,KAAO,IAAIsB,IAAWe,EAAUC,GACrClD,KAAKY,KAAKyB,SAASjB,IAAI,EAAE,EAAE,GAC3BpB,KAAKwB,MAAM/B,IAAIO,KAAKY,MAGpB,IAAMwC,EAAiB,IAAIlB,IAAqB,GAC1CmB,EAAiB,IAAInB,IAAwB,CAACiB,MAAOxE,IAAuB2E,QAASpB,MAC3FlC,KAAKqB,KAAO,IAAIa,IAAWkB,EAAgBC,GAC3CrD,KAAKqB,KAAKgB,SAASjB,IAAI,GAAG,GAAG,IAC7BpB,KAAKwB,MAAM/B,IAAIO,KAAKqB,Q,+BAiCd,IAAD,OACL,OACI,yBAAKkC,IAAK,SAAAA,GAAG,OAAK,EAAK7B,MAAQ6B,S,GA/ElBC,IAAMC,W,iBCa/B,SAASC,EAAWC,GAChB,IAAMC,EAAUvD,SAASwD,eAAe,YAV5C,WACI,IAAMD,EAAUvD,SAASwD,eAAe,WAClCC,EAAY,IAAIC,IAAa,CAACC,WAAY,WAC5CF,EAAUG,QACVH,EAAUI,SAAS,GACnBN,EAAQpD,MAAQ,MAEpB,OAAOsD,GAIPK,GACCC,GAAGR,EAAS,GAAK,CAAC9C,GAAI,IAAMuD,QAAS,IACrCD,GAAGR,EAAS,EAAG,CAAC9C,EAAG,IAAMkD,WAAY,kBAAMM,IAAS/C,OAAOoC,EAASC,MACpEQ,GAAGR,EAAS,GAAK,CAAC9C,EAAG,EAAGuD,QAAS,EAAGE,KAAM,wBAI1CxE,OAGL,IAAMyE,EAAO,yBAAKC,UAAU,kBACtBC,EACF,yBAAKD,UAAU,iBAAf,oBAEY,yBAAKE,IAAKC,IAAMC,MAAM,QAAQC,OAAO,MAAMC,IAAI,UAEzDC,EAAQ,yBAAKP,UAAU,iBACb,wBAAIA,UAAU,QAAd,0BAGA,4BAAQQ,MAAM,sBAAsBR,UAAU,QAAQE,IAAI,4CAA4CO,YAAY,IAAIC,MAAM,0EAA0EC,iBAAe,IACrN,4BAAQH,MAAM,oBAAoBR,UAAU,aAAaE,IAAI,8DAA8DO,YAAY,IAAIG,kBAAkB,OAAOF,MAAM,qBAEpLG,EAAQ,kBAAC,EAAD,CAAY1F,KAAM2F,MAE1BC,EAAQ,yBAAKf,UAAU,kBAIvBgB,E,uKAEE,OACI,yBAAKhB,UAAU,UACX,kBAAC,EAAD,CAAWiB,KAAMlB,GAAjB,UACA,kBAAC,EAAD,CAAWkB,KAAMhB,GAAjB,gBACA,kBAAC,EAAD,CAAWgB,KAAMV,GAAjB,gBACA,kBAAC,EAAD,CAAWU,KAAMJ,GAAjB,gBACA,kBAAC,EAAD,CAAWI,KAAMF,GAAjB,kB,0CAMRnH,EAAwB,IACxBqF,EAAWc,O,GAfEhB,IAAMC,WAmBrBkC,E,4MASFxG,YAAc,WACVuE,EAAW,EAAK7E,MAAM6G,O,uDARtB,OAEI,0BAAMjB,UAAU,YAAYmB,QAAS5F,KAAKb,aAA1C,IAAyDa,KAAKnB,MAAMgH,SAApE,S,GAJYrC,IAAMC,WAafgC,ICrEAK,MATf,WACE,OACE,yBAAKC,GAAG,OACJ,kBAAC,EAAD,MACA,yBAAKA,GAAG,cCKIC,QACW,cAA7BlE,OAAOmE,SAASC,UAEe,UAA7BpE,OAAOmE,SAASC,UAEhBpE,OAAOmE,SAASC,SAASC,MACvB,2DCZNC,IAAS7E,OACP,kBAAC,IAAM8E,WAAP,KACE,kBAAC,EAAD,OAEFhG,SAASwD,eAAe,SDyHpB,kBAAmByC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5F,QAAQ4F,MAAMA,EAAMC,c","file":"static/js/main.696af75a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.4ef3518a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Flow.5c8f7d60.mp3\";","const RETRO_COLORS = [\"rgb(255,237,130)\",\"rgb(240,207,207)\",\"rgb(236,90,90)\",\"rgb(147,212,165)\",\"rgb(134,221,205)\"]\n\nexport function getRandomValueFromArray(list) {\n    const index = Math.floor(Math.random() * list.length)\n    \n    return list[index]\n}\n\nexport function getRandomRetroColor() {\n    return getRandomValueFromArray(RETRO_COLORS)\n}","import { Audio, AudioLoader, AudioAnalyser, AudioListener} from \"three\"\n\n\nclass AudioPlayer {\n    constructor(props) {\n        this.props = props;\n        // this is how you create an HTML Element in Javascript\n        this.button = document.createElement(\"button\"); // <button></button>\n        this.button.innerHTML = (\"play\"); // <button> Play </button>\n        this.button.style = `\n            position: fixed;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n        `;\n\n        this.addEventListeners()\n    }\n\n    getFrequencyData = () => {\n        return this.audioAnalyser.getFrequencyData();\n    }\n\n    addEventListeners = () => {\n        this.button.addEventListener(\"click\", this.handleClick);\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API \n    handleClick = () => {;\n        const listener = new AudioListener();\n        const audio = new Audio(listener); // <audio></audio>\n        this.props.camera.add(listener);\n        const loader = new AudioLoader();\n        loader.load(this.props.song, function(buffer) {\n            audio.setBuffer(buffer)\n            audio.play()\n            this.props.onAudioPlay()\n        }.bind(this));\n        this.audioAnalyser = new AudioAnalyser(audio, this.props.frequencyCount || 2048);\n    }\n\n}\n \nexport default AudioPlayer;\n\n","import React from \"react\"\nimport * as THREE from \"three\"\nimport {getRandomRetroColor} from \"../Util\"\nimport AudioPlayer from\"../buttons/AudioPlayer\"\n\nclass Visualizer extends React.Component {\n    componentDidMount() {\n        this.H = window.innerHeight\n        this.W = window.innerWidth\n        \n        this.scene = new THREE.Scene() \n        this.scene.background = new THREE.Color(\"skyblue\")\n\n        const fieldOfView = 95\n        const aspectRatio = this.W/this.H \n        const nearPlane = 0.1\n        const farPlane =  1000\n        this.camera = new THREE.PerspectiveCamera(fieldOfView, aspectRatio, nearPlane, farPlane)\n        this.camera.position.x = 0\n        this.camera.position.y = 0\n        this.camera.position.z = 10\n        this.camera.lookAt(this.scene.position)\n\n        const light = new THREE.AmbientLight(0x404040)\n        this.scene.add(light)\n\n        this.generateMatrix()\n        this.setUpAudio()\n        this.renderer = new THREE.WebGLRenderer() \n        this.renderer.setSize(this.W, this.H)\n        this.renderer.setPixelRatio(window.devicePixelRatio)\n        this.renderer.shadowMap.enabled = true\n        this.mount.appendChild(this.renderer.domElement) \n        this.renderer.render(this.scene, this.camera)   \n\n    }\n\n    generateMatrix() {\n        const geometry = new THREE.BoxGeometry(1,1,1)\n        const material = new THREE.MeshBasicMaterial({color: getRandomRetroColor()})\n        this.mesh = new THREE.Mesh(geometry, material) \n        this.mesh.position.set(0,0,0)\n        this.scene.add(this.mesh)\n    \n\n        const sphereGeometry = new THREE.SphereGeometry(3)\n        const sphereMaterial = new THREE.MeshBasicMaterial({color: getRandomRetroColor(), shading: THREE.SmoothShading})\n        this.wesh = new THREE.Mesh(sphereGeometry, sphereMaterial)\n        this.wesh.position.set(15,0,-10)\n        this.scene.add(this.wesh)\n    }\n    update = () => {\n        requestAnimationFrame(this.update)\n\n        // this.wesh.rotation.x -= 0.01\n        this.mesh.rotation.x += 0.01\n\n        const frequencyList = this.audioPlayer.getFrequencyData()\n        const amplitude = (frequencyList[0] / 50) + 1\n        console.log(amplitude)\n        this.mesh.scale.set(amplitude, amplitude, amplitude)  \n        this.wesh.scale.set(amplitude, amplitude, amplitude)\n\n        this.renderer.render(this.scene, this.camera)\n    }\n\n    setUpAudio = () => {\n        this.audioPlayer = new AudioPlayer({\n            camera: this.camera,\n            song: this.props.song,\n            onAudioPlay: this.onAudioPlay,\n            frequencyCount: 128\n        })\n        this.mount.appendChild(this.audioPlayer.button);\n    }\n\n    onAudioPlay = () => {\n        this.mount.removeChild(this.audioPlayer.button);\n        this.update()\n    }\n\n\n    render() {\n        return (     \n            <div ref={ref => (this.mount = ref)} />\n        )\n    }\n}\n\nexport default Visualizer","import React from 'react';\nimport ReactDom from 'react-dom';\nimport hand from './pictures/hand.jpg';\nimport './Navbar.css'\nimport {TimelineLite } from 'gsap/all'\nimport Visualizer from './3D shit/Visualizer'\nimport {getRandomValueFromArray} from './Util'\nimport FlowSong from './Music/Flow.mp3'\n\nfunction Animation() {\n    const navBody = document.getElementById(\"navBody\")\n    const animation = new TimelineLite({onComplete: () => {\n        animation.pause();\n        animation.progress(0);\n        navBody.style = \"\";\n    }});\n    return animation;\n}\nfunction renderbody(element) {\n    const navBody = document.getElementById(\"navBody\");\n    Animation()\n    .to(navBody, 0.5, {x: -2000, opacity: 0})\n    .to(navBody, 0, {x: 2000, onComplete: () => ReactDom.render(element, navBody)})\n    .to(navBody, 0.4, {x: 0, opacity: 1, ease: \"elastic.out(.75, 1)\"})\n    // .to(navBody, 0, {rotationZ: 180, rotationY: 180})\n    // .to(navBody, 0.8, {rotationX: 90, onComplete: () => ReactDom.render(element, navBody)})\n    // .to(navBody, 0.8, {rotationX: 180})\n    .play();\n}\n\nconst home = <div className=\"navBody page1\"></div>;\nconst casa = (\n    <div className=\"navBody page2\">\n                Welcome 2 My Crib\n                <img src={hand} width=\"500px\" height=\"800\" alt=\"hand\"></img>\n                </div>);\nconst page3 = <div className=\"navBody page3\">\n                <h1 className=\"text\"> \n                I SEE YOU CLICKED HERE\n                </h1>\n                <iframe title='youtube music video' className=\"video\" src=\"https://www.youtube.com/embed/DR6TtBmJ-CE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                <iframe title='spotify song menu' className=\"albumEmbed\" src=\"https://open.spotify.com/embed/album/46tsdG65ya5HOL8sUf5CS1\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                </div>;\nconst page4 = <Visualizer song={FlowSong}></Visualizer>\n\nconst page5 = <div className=\"navBody page5\"></div>;\n\n\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <div className=\"navbar\">\n                <Navbutton body={home}> Home </Navbutton>\n                <Navbutton body={casa}> press here </Navbutton>\n                <Navbutton body={page3}> click here </Navbutton>\n                <Navbutton body={page4}> your momma </Navbutton>\n                <Navbutton body={page5}> last page </Navbutton>\n            </div>\n        )\n    }\n\n    componentDidMount () {\n        getRandomValueFromArray([])\n        renderbody(home)\n    }\n}\n\nclass Navbutton extends React.Component {\n    render() {\n        return (\n        \n            <span className=\"Navbutton\" onClick={this.handleClick}> {this.props.children} </span>\n    \n        )\n    }\n    \n    handleClick = () => {\n        renderbody(this.props.body)\n    }\n }\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar'\nfunction App() {\n  return (\n    <div id=\"App\">\n        <Navbar></Navbar>\n        <div id=\"navBody\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}